// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleInsuranceSystem.DAL.Data;

#nullable disable

namespace VehicleInsuranceSystem.DAL.Migrations
{
    [DbContext(typeof(VehicleInsuranceDbContext))]
    partial class VehicleInsuranceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VehicleInsuranceSystem.DAL.Models.AddOn", b =>
                {
                    b.Property<int>("AddOnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddOnId"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddOnId");

                    b.ToTable("AddOns");

                    b.HasData(
                        new
                        {
                            AddOnId = 1,
                            Cost = 1000m,
                            Name = "Roadside Assistance"
                        },
                        new
                        {
                            AddOnId = 2,
                            Cost = 1500m,
                            Name = "Engine Protection"
                        },
                        new
                        {
                            AddOnId = 3,
                            Cost = 2000m,
                            Name = "Zero Depreciation"
                        },
                        new
                        {
                            AddOnId = 4,
                            Cost = 800m,
                            Name = "Tyre Cover"
                        },
                        new
                        {
                            AddOnId = 5,
                            Cost = 600m,
                            Name = "Key Replacement"
                        });
                });

            modelBuilder.Entity("VehicleInsuranceSystem.DAL.Models.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimDocumentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfficerComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PolicyId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PolicyId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("VehicleInsuranceSystem.DAL.Models.Policy", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolicyId"));

                    b.Property<string>("DocumentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PolicyProposalId")
                        .HasColumnType("int");

                    b.Property<decimal>("PremiumAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PolicyId");

                    b.HasIndex("PolicyProposalId")
                        .IsUnique();

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("VehicleInsuranceSystem.DAL.Models.PolicyAddOn", b =>
                {
                    b.Property<int>("PolicyProposalId")
                        .HasColumnType("int");

                    b.Property<int>("AddOnId")
                        .HasColumnType("int");

                    b.HasKey("PolicyProposalId", "AddOnId");

                    b.HasIndex("AddOnId");

                    b.ToTable("PolicyAddOns");
                });

            modelBuilder.Entity("VehicleInsuranceSystem.DAL.Models.PolicyProposal", b =>
                {
                    b.Property<int>("PolicyProposalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolicyProposalId"));

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<decimal>("PremiumAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("QuoteGeneratedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SelectedAddOnsCsv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmittedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("PolicyProposalId");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleId")
                        .IsUnique();

                    b.ToTable("PolicyProposals");
                });

            modelBuilder.Entity("VehicleInsuranceSystem.DAL.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("AadhaarNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PANNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VehicleInsuranceSystem.DAL.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<int>("ManufacturingYear")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleId");

                    b.HasIndex("UserId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("VehicleInsuranceSystem.DAL.Models.Claim", b =>
                {
                    b.HasOne("VehicleInsuranceSystem.DAL.Models.Policy", "Policy")
                        .WithMany()
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("VehicleInsuranceSystem.DAL.Models.Policy", b =>
                {
                    b.HasOne("VehicleInsuranceSystem.DAL.Models.PolicyProposal", "PolicyProposal")
                        .WithOne("Policy")
                        .HasForeignKey("VehicleInsuranceSystem.DAL.Models.Policy", "PolicyProposalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PolicyProposal");
                });

            modelBuilder.Entity("VehicleInsuranceSystem.DAL.Models.PolicyAddOn", b =>
                {
                    b.HasOne("VehicleInsuranceSystem.DAL.Models.AddOn", "AddOn")
                        .WithMany("PolicyAddOns")
                        .HasForeignKey("AddOnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleInsuranceSystem.DAL.Models.PolicyProposal", "PolicyProposal")
                        .WithMany("PolicyAddOns")
                        .HasForeignKey("PolicyProposalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddOn");

                    b.Navigation("PolicyProposal");
                });

            modelBuilder.Entity("VehicleInsuranceSystem.DAL.Models.PolicyProposal", b =>
                {
                    b.HasOne("VehicleInsuranceSystem.DAL.Models.User", "User")
                        .WithMany("PolicyProposals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleInsuranceSystem.DAL.Models.Vehicle", "Vehicle")
                        .WithOne("PolicyProposal")
                        .HasForeignKey("VehicleInsuranceSystem.DAL.Models.PolicyProposal", "VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("VehicleInsuranceSystem.DAL.Models.Vehicle", b =>
                {
                    b.HasOne("VehicleInsuranceSystem.DAL.Models.User", "User")
                        .WithMany("Vehicles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleInsuranceSystem.DAL.Models.AddOn", b =>
                {
                    b.Navigation("PolicyAddOns");
                });

            modelBuilder.Entity("VehicleInsuranceSystem.DAL.Models.PolicyProposal", b =>
                {
                    b.Navigation("Policy")
                        .IsRequired();

                    b.Navigation("PolicyAddOns");
                });

            modelBuilder.Entity("VehicleInsuranceSystem.DAL.Models.User", b =>
                {
                    b.Navigation("PolicyProposals");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("VehicleInsuranceSystem.DAL.Models.Vehicle", b =>
                {
                    b.Navigation("PolicyProposal")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
